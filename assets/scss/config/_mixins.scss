// Mixin
@mixin transition($transition) {
    -moz-transition:    $transition ease-in;
    -o-transition:      $transition ease-in;
    -webkit-transition: $transition ease-in;
    -ms-transition:   $transition ease-in;
    transition:         $transition ease-in;
}
@mixin inline-block() {
  display:-moz-inline-stack;
  display:inline-block;
  zoom:1;
  *display:inline;
}
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}


@mixin fixed-page-ht() {
  @media only screen and (max-width:767px) and (orientation: landscape) {
    height: 100vh;
  }
  @media only screen and (max-width:767px) and (min-width:480px) and (orientation: portrait) {
    // assume 16:9, minus some for header
    // 1.778 true aspect ratio
    // height: 170vw;
    height: 150vw;
  }
  @media only screen and (max-width:479px) and (orientation: portrait) {
    // height: 164vw;
    height: 144vw;
  }
  @media only screen and (min-width:768px) and (orientation: portrait) {
    // assume 4:3, minus some for header
    // 1.3333 true aspect ratio
    // height: 130vw;
    height: 125vw;
  }
  @media only screen and (min-width:768px) and (orientation: landscape) {
    height: 100vh;
  }
}


@mixin _animate ($property:all, $dur:200ms, $easing:ease-in-out, $delay:0s) {
  transition: $property $dur $easing $delay;
  -webkit-backface-visibility: hidden;
}

@mixin _abs-fill() {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height:100%;
  overflow: hidden;
}

@mixin _flex-ctr ( $align:false, $direction:column ) {
  display: flex;
  flex-direction: $direction;
  justify-content: center;
  @if $align {
    align-items: $align;
  }
}

// Material Shadows
// https://css-tricks.com/snippets/sass/material-shadows-mixin/
/// Gives a card depth effect.
/// @param {Number} $depth - depth level (between 1 and 5)
/// @link http://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality Google Design
/// @requires {function} top-shadow
/// @requires {function} bottom-shadow
@mixin card($depth) {
  @if $depth < 1 {
    box-shadow: none;
  } @else if $depth > 5 {
    @warn "Invalid $depth `#{$depth}` for mixin `card`.";
  } @else {
    box-shadow: bottom-shadow($depth), top-shadow($depth);  
  }
}

/// Computes a top-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function top-shadow($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba(black, nth(.06 .12 .16 .19 .25 .30, $depth));

  @return 0 $primary-offset $blur $color;
}

/// Computes a bottom-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function bottom-shadow($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba(black, nth(.12 .24 .23 .23 .22 .22, $depth));

  @return 0 $primary-offset $blur $color;
}

/* 
@keyframes slide-in-rt {
  0% {
    transform: translate(100vw);
  }
  50% {
    transform: translate(0);
  }
}
@keyframes slide-in-lt {
  0% {
    transform: translate(-100vw);
  }
  50% {
    transform: translate(0);
  }
}
@keyframes slide-in-1 {
  0% {
    transform: translate(-100vw);
  }
  50% {
    transform: translate(0);
  }
}
@keyframes slide-in-2 {
  0% {
    transform: translate(-100vw);
  }
  10% {
    transform: translate(-100vw);
  }
  60% {
    transform: translate(0);
  }
}
@keyframes slide-in-3rt {
  0% {
    transform: translate(100vw);
  }
  20% {
    transform: translate(100vw);
  }
  70% {
    transform: translate(0);
  }
}
@keyframes slide-in-3lt {
  0% {
    transform: translate(-100vw);
  }
  100% {
    transform: translate(-100vw);
  }
  70% {
    transform: translate(0);
  }
}
@keyframes slide-in-spin {
  0% {
    transform: rotate(90deg) scale(0.5);
    opacity: 0;
  }
  100% {
    transform: rotate(0deg) scale(1);
    opacity: 0;
  }
}
 */


